Vagrant.configure("2") do |config|
  config.vagrant.plugins = ["vagrant-vbguest", "vagrant-scp"]
  config.vm.box = "ubuntu/focal64"
  config.vm.define :k3s do |t|
  end
  config.vm.provider "virtualbox" do |vb|
    # Display the VirtualBox GUI when booting the machine
    vb.gui = true
    vb.name = "ubuntu20"
    # Customize the amount of memory on the VM:
    vb.memory = "4096"
    vb.cpus = 2
  end
  config.vm.network "forwarded_port", guest: 6443, host: 6443
  config.vm.network "public_network"
  config.vm.provision "shell", inline: <<-SHELL
    #!/bin/bash
    apt update -y
    apt install python3-pip -y

    # Install docker
    apt-get remove -y docker docker-engine docker.io containerd runc
    apt-get -y install ca-certificates curl gnupg lsb-release
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    echo   "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
      $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    apt-get update
    apt-get -y install docker-ce docker-ce-cli containerd.io

    # Set "vagrant" user as member of "docker" group
    usermod -aG docker vagrant

    # Install rancher k3s cluster
    curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION='v1.25.4+k3s1' K3S_KUBECONFIG_MODE=644 K3S_RESOLV_CONF=/run/systemd/resolve/resolv.conf INSTALL_K3S_EXEC='server --disable=traefik' sh -

    # Copy k3s config for "vagrant" user
    rm -rfv $HOME/.kube
    mkdir -v $HOME/.kube
    cp /etc/rancher/k3s/k3s.yaml $HOME/.kube/config
    chmod 400 $HOME/.kube/config
    rm -rfv /home/vagrant/.kube
    mkdir -v /home/vagrant/.kube
    cp /root/.kube/config  /home/vagrant/.kube/config
    chown -R vagrant:vagrant /home/vagrant/.kube

    # Install helm
    curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
    chmod 700 get_helm.sh
    ./get_helm.sh

  SHELL
  
  config.trigger.after :provisioner_run, :up do |trigger|
    trigger.name = "Copy kubeconfig"
    trigger.info = "RUN: rm -f .kubeconfig && vagrant scp k3s:~/.kube/config .kubeconfig && export KUBECONFIG=$PWD/.kubeconfig"
  end
end

